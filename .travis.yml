language: cpp

dist: trusty

matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'gcc-5']
      before_install:
        - cd ..
        - wget http://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.bz2/download -O boost.tar.bz2
        - tar -xjf boost.tar.bz2
        - export BOOST_ROOT=$PWD/boost_1_68_0
        - export CMAKE_CXX=g++-5
        - export CMAKE_CC=gcc-5
        - cd jmespath.cpp
      env: COMPILER=g++-5
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'gcc-6']
      before_install:
        - cd ..
        - wget http://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.bz2/download -O boost.tar.bz2
        - tar -xjf boost.tar.bz2
        - export BOOST_ROOT=$PWD/boost_1_68_0
        - export CMAKE_CXX=g++-6
        - export CMAKE_CC=gcc-6
        - cd jmespath.cpp
      env: COMPILER=g++-6
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7', 'gcc-7']
      before_install:
        - cd ..
        - wget http://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.bz2/download -O boost.tar.bz2
        - tar -xjf boost.tar.bz2
        - export BOOST_ROOT=$PWD/boost_1_68_0
        - export CMAKE_CXX=g++-7
        - export CMAKE_CC=gcc-7
        - cd jmespath.cpp
      env: COMPILER=g++-7
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8', 'gcc-8']
      before_install:
        - cd ..
        - wget http://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.bz2/download -O boost.tar.bz2
        - tar -xjf boost.tar.bz2
        - export BOOST_ROOT=$PWD/boost_1_68_0
        - export CMAKE_CXX=g++-8
        - export CMAKE_CC=gcc-8
        - cd jmespath.cpp
      env: COMPILER=g++-8
    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-3.9']
          packages: ['clang-3.9']
      before_install:
        - cd ..
        - wget http://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.bz2/download -O boost.tar.bz2
        - tar -xjf boost.tar.bz2
        - export BOOST_ROOT=$PWD/boost_1_68_0
        - export CMAKE_CXX=clang++-3.9
        - export CMAKE_CC=clang-3.9
        - cd jmespath.cpp
      env: COMPILER=clang++-3.9
    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-4.0']
          packages: ['clang-4.0']
      before_install:
        - cd ..
        - wget http://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.bz2/download -O boost.tar.bz2
        - tar -xjf boost.tar.bz2
        - export BOOST_ROOT=$PWD/boost_1_68_0
        - export CMAKE_CXX=clang++-4.0
        - export CMAKE_CC=clang-4.0
        - cd jmespath.cpp
      env: COMPILER=clang++-4.0
    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0']
          packages: ['clang-5.0']
      before_install:
        - cd ..
        - wget http://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.bz2/download -O boost.tar.bz2
        - tar -xjf boost.tar.bz2
        - export BOOST_ROOT=$PWD/boost_1_68_0
        - export CMAKE_CXX=clang++-5.0
        - export CMAKE_CC=clang-5.0
        - cd jmespath.cpp
      env: COMPILER=clang++-5.0
    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0']
          packages: [clang-6.0']
      before_install:
        - cd ..
        - wget http://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.bz2/download -O boost.tar.bz2
        - tar -xjf boost.tar.bz2
        - export BOOST_ROOT=$PWD/boost_1_68_0
        - export CMAKE_CXX=clang++-6.0
        - export CMAKE_CC=clang-6.0
        - cd jmespath.cpp
      env: COMPILER=clang++-6.0
    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-7']
          packages: ['clang-7', 'python-pip', 'python-yaml']
      before_install:
        - cd ..
        - wget http://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.bz2/download -O boost.tar.bz2
        - tar -xjf boost.tar.bz2
        - export BOOST_ROOT=$PWD/boost_1_68_0
        - export CMAKE_CXX=clang++-7
        - export CMAKE_CC=clang-7
        - cd jmespath.cpp
        - pip install --user git+git://github.com/eddyxu/cpp-coveralls.git
      after_success:
        - make clean
        - cmake .. -DCMAKE_BUILD_TYPE=Debug -DJMESPATH_COVERAGE_INFO=ON
        - make unit
        - ./test/unit
        - cd ..
        - ~/.local/bin/coveralls --exclude test --exclude third_party --include src --gcov-options '\-lp'
      env: COMPILER=clang++-7
    - os: osx
      osx_image: xcode7.2 # clang 3.7
      compiler: clang
      env: COMPILER=clang++
      env: CMAKE_CXX=clang++
      env: CMAKE_CC=clang
      before_install:
        - brew install cmake
    # - os: osx
    #   osx_image: xcode6.4 # clang 3.6
    #   compiler: clang
    #   env: COMPILER=clang++
    #   env: CMAKE_CXX=clang++
    #   env: CMAKE_CC=clang
    #   before_install: 
    #     - brew install cmake
    - os: osx
      osx_image: beta-xcode6.2 # clang 3.5
      compiler: clang
      env: COMPILER=clang++
      env: CMAKE_CXX=clang++
      env: CMAKE_CC=clang
      before_install: 
        - brew install cmake

before_script:  
  - mkdir build
  - cd build
  - cmake -DCMAKE_C_COMPILER=$CMAKE_CC -DCMAKE_CXX_COMPILER=$CMAKE_CXX ..

script:
  - make
  - cd test
  - ./unit
  - ./compliance
  - cd ..
  - cd ../example
  - mkdir build;cd build
  - cmake -DCMAKE_C_COMPILER=$CMAKE_CC -DCMAKE_CXX_COMPILER=$CMAKE_CXX ..
  - make 
  - ./example
  - cd ../../build
