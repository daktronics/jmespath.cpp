language: cpp

sudo: false

matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['george-edison55-precise-backports', 'ubuntu-toolchain-r-test']
          packages: ['cmake', 'cmake-data', 'g++-4.9']
      before_install:
        - wget http://sourceforge.net/projects/boost/files/boost/1.57.0/boost_1_57_0.tar.bz2/download -O boost.tar.bz2
        - tar -xjf boost.tar.bz2
        - export BOOST_ROOT=$PWD/boost_1_57_0
      env: COMPILER=g++-4.9
      env: CXX=$COMPILER
      env: CC=gcc-4.9
    - os: osx
      osx_image: xcode7.2 # clang 3.7
      compiler: clang
      env: COMPILER=clang++
      env: CXX=$COMPILER
      env: CC=clang
      before_install:
        - brew update
        - brew install pyenv
        - eval "$(pyenv init -)"
        - pyenv install 2.7.6
        - pyenv global 2.7.6
        - pyenv rehash
        - pip install cpp-coveralls
        - pyenv rehash
        - brew install cmake
      after_success:
        - make clean
        - cmake .. -DCMAKE_BUILD_TYPE=Debug -DJMESPATH_COVERAGE_INFO=ON
        - make unit
        - ./test/unit
        - cd ..
        - coveralls --exclude test --exclude third_party --include src --gcov-options '\-lp'
    - os: osx
      osx_image: xcode6.4 # clang 3.6
      compiler: clang
      env: COMPILER=clang++
      env: CXX=$COMPILER
      env: CC=clang
      before_install: 
        - brew install cmake
    - os: osx
      osx_image: beta-xcode6.2 # clang 3.5
      compiler: clang
      env: COMPILER=clang++
      env: CXX=$COMPILER
      env: CC=clang
      before_install: 
        - brew install cmake

before_script:  
  - mkdir build
  - cd build
  - cmake -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX ..

script:
  - make
  - cd test
  - ./unit
  - ./compliance
  - cd ..
